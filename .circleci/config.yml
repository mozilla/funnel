version: 2.1
orbs:
  node: circleci/node@2.0.1
  gcs: t3n/gcs@0.1.3
jobs:
  build-and-test:
    executor:
      name: node/default
      tag: "12.16"
    steps:
      - checkout
      - node/install-packages
      - run: echo $REDASH_QUERY_JSON > queries.json
      - run: npm install
      - run: npm run build
      - run: npm test
      - run: mkdir /tmp/workspace
      - run: cp -r public /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - public/*
  upload:
    docker:
      - image: google/cloud-sdk
    working_directory: /tmp
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - run: ls -alh /tmp/workspace
      - gcs/gcs-rsync:
          bucket: mozilla-desktop-funnel-prototype
          source: /tmp/workspace/public
          options: -r
  deploy-preview:
    docker:
      - image: google/cloud-sdk
    working_directory: /tmp
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      # shamelessly cribbed from https://circleci.com/developer/orbs/orb/samsalisbury/github-status
      - run: |
          set -euo pipefail
          CONTEXT="circleci/$CIRCLE_JOB"
          # Compose our URL and auth pieces
          API=https://api.github.com
          USER=$CIRCLE_PROJECT_USERNAME
          REPO=$CIRCLE_PROJECT_REPONAME
          SHA=$CIRCLE_SHA1
          AUTH=$GITHUB_STATUS_USER:$GITHUB_STATUS_TOKEN
          URL=$API/repos/$USER/$REPO/statuses/$SHA
          # Compose the body.
          BODY='
            {
              "state": "success",
              "target_url": "https://protosaur.dev/numbers-that-matter/previews/'$CIRCLE_BRANCH'",
              "description": "Deploy Preview",
              "context": "'$CONTEXT'"
            }
          '
          # Post the status (use echo-pipe not \<<< for greater shell compat).
          echo $BODY | curl -u $AUTH -XPOST -d@- $URL
workflows:
  build-and-test:
    jobs:
      - build-and-test
      - deploy-preview:
          requires:
            - build-and-test
          filters:
            branches:
              ignore: main
      - upload:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
